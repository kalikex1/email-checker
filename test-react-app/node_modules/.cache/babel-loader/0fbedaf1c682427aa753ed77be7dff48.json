{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/email-checker/test-react-app/src/components/FileUpload/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './FileUpload.css';\nimport fI from './fileIcon.png';\nimport fDl from './dlFile.png';\nimport Papa from 'papaparse';\nimport loadGif from './dot-loader.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FileUpload(props) {\n  _s();\n\n  const [uploaded, setUploaded] = useState({});\n  const [cleanFile, setCleanFile] = useState({});\n  const [loading, setLoading] = useState(false);\n  const hiddenFileInput = React.useRef(null);\n  const hiddenFileDownload = React.useRef(null);\n  const link = document.getElementById('link');\n\n  async function emailCheck(e) {\n    const result = await fetch(`https://aaront612.pythonanywhere.com/multi/${e}`, {\n      method: 'GET'\n    }).then(response => response.json()).then(data => {\n      return data;\n    });\n    return await result;\n  }\n\n  async function handleFilter() {\n    if (uploaded.file === undefined) return;\n    setLoading(true);\n    let isUnorganized = false;\n    let fileRows = await Papa.parse(uploaded.file, {\n      delimiter: '',\n      newline: '',\n      header: true,\n      skipEmptyLines: true,\n      complete: async function (results) {\n        const cleanArr = [];\n\n        if (results.data[0]['Email'] || results.data[0]['email']) {\n          console.log(results.data.length, 'emails found - organized');\n\n          for (let i = 0; i < results.data.length; i++) {\n            if (results.data[i]['Email']) {\n              let result = await emailCheck(results.data[i]['Email']);\n\n              if (result.Result === 'Valid') {\n                console.log(results.data[i], 'validddd');\n                cleanArr.push(results.data[i]);\n              }\n            } else if (results.data[i]['email']) {\n              let result = await emailCheck(results.data[i]['email']);\n\n              if (result.Result === 'Valid') {\n                console.log(results.data[i], 'validddd');\n                cleanArr.push(results.data[i]);\n              }\n            }\n          }\n        } else {\n          isUnorganized = true;\n          let unorganized = await Papa.parse(uploaded.file, {\n            delimiter: '',\n            newline: '',\n            header: false,\n            skipEmptyLines: false,\n            complete: async function (results) {\n              const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n              let emailArr = [];\n\n              for (let i = 0; i < results.data.length; i++) {\n                let filtered = results.data[i].filter(str => re.test(str));\n                emailArr = [...emailArr, ...filtered];\n              }\n\n              console.log(emailArr.length, 'emails found - unorganized');\n\n              for (let i = 0; i < emailArr.length; i++) {\n                let result = await emailCheck(emailArr[i]);\n\n                if (result.Result === 'Valid') {\n                  cleanArr.push(emailArr[i]);\n                  console.log(cleanArr);\n                }\n              }\n            }\n          });\n        }\n\n        if (isUnorganized) {\n          let finalArr = [];\n          console.log(cleanArr);\n\n          while (cleanArr.length) {\n            console.log('in loop');\n            let val = cleanArr.shift();\n            finalArr.push({\n              'Email': val\n            });\n          }\n\n          console.log(finalArr);\n          const newF = await Papa.unparse(finalArr);\n          let csvData = new Blob([newF], {\n            type: 'text/csv;charset=utf-8;'\n          });\n          let csvURL = window.URL.createObjectURL(csvData);\n          link.download = 'clean-' + uploaded.fName;\n          link.href = csvURL;\n          setLoading(false);\n          hiddenFileDownload.current.click();\n          return finalArr;\n        } else {\n          const newF = await Papa.unparse(cleanArr);\n          let csvData = new Blob([newF], {\n            type: 'text/csv;charset=utf-8;'\n          });\n          let csvURL = window.URL.createObjectURL(csvData);\n          link.download = 'clean-' + uploaded.fName;\n          link.href = csvURL;\n          setLoading(false);\n          hiddenFileDownload.current.click();\n          return cleanArr;\n        }\n      }\n    });\n  }\n\n  function handleClick(e) {\n    hiddenFileInput.current.click();\n  }\n\n  function handleChange(e) {\n    setUploaded({\n      file: e.target.files[0],\n      fName: e.target.files[0].name\n    });\n  }\n\n  function handleDownload() {\n    let objectURL = URL.createObjectURL(cleanFile === null || cleanFile === void 0 ? void 0 : cleanFile.file);\n    link.download = 'clean-' + (cleanFile === null || cleanFile === void 0 ? void 0 : cleanFile.fName);\n    link.href = objectURL;\n    hiddenFileDownload.current.click();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: e => handleChange(e),\n      ref: hiddenFileInput,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: uploaded === null || uploaded === void 0 ? void 0 : uploaded.file,\n      id: \"link\",\n      style: {\n        display: 'none'\n      },\n      ref: hiddenFileDownload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fileUploadWrap\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fileLoader\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: loadGif,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Large Files May Take Several Minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dirtyContainer\",\n          onClick: e => handleClick(e),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"uploadIcon\",\n            src: fI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: uploaded !== null && uploaded !== void 0 && uploaded.fName ? uploaded === null || uploaded === void 0 ? void 0 : uploaded.fName : 'Upload Here'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Upload a csv file for bulk verification. Include headers on file for best results (i.e. 'Email')\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"cleanButton\",\n            onClick: e => handleFilter(e),\n            children: \"Clean File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FileUpload, \"Wahc3Po2qKjmnOho8YjdwSxWgJc=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useEffect","useState","fI","fDl","Papa","loadGif","FileUpload","props","uploaded","setUploaded","cleanFile","setCleanFile","loading","setLoading","hiddenFileInput","useRef","hiddenFileDownload","link","document","getElementById","emailCheck","e","result","fetch","method","then","response","json","data","handleFilter","file","undefined","isUnorganized","fileRows","parse","delimiter","newline","header","skipEmptyLines","complete","results","cleanArr","console","log","length","i","Result","push","unorganized","re","emailArr","filtered","filter","str","test","finalArr","val","shift","newF","unparse","csvData","Blob","type","csvURL","window","URL","createObjectURL","download","fName","href","current","click","handleClick","handleChange","target","files","name","handleDownload","objectURL","display"],"sources":["/Users/aaron/email-checker/test-react-app/src/components/FileUpload/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport './FileUpload.css'\n\nimport fI from './fileIcon.png'\nimport fDl from './dlFile.png'\n\nimport Papa from 'papaparse'\n\nimport loadGif from './dot-loader.gif'\n\nfunction FileUpload(props) {\n    const [uploaded, setUploaded] = useState({})\n\n    const [cleanFile, setCleanFile] = useState({})\n\n    const [loading, setLoading] = useState(false)\n\n    const hiddenFileInput = React.useRef(null)\n    const hiddenFileDownload = React.useRef(null)\n    const link = document.getElementById('link')\n\n    async function emailCheck(e) {\n        const result = await fetch(`https://aaront612.pythonanywhere.com/multi/${e}`, { method: 'GET' })\n            .then(response => response.json())\n            .then(data => { return data })\n        return await result\n    }\n\n    async function handleFilter(){\n        if (uploaded.file === undefined) return\n\n        setLoading(true)\n\n        let isUnorganized = false\n\n        \n        let fileRows = await Papa.parse(uploaded.file, {\n            delimiter: '',\n            newline: '',\n            header: true,\n            skipEmptyLines: true,\n            complete: async function (results) {\n                const cleanArr = []\n                if (results.data[0]['Email'] || results.data[0]['email']){\n                    console.log(results.data.length, 'emails found - organized')\n                    for (let i = 0; i < results.data.length; i++){\n                        if(results.data[i]['Email']){\n                            let result = await emailCheck(results.data[i]['Email'])\n                            if (result.Result === 'Valid'){\n                                console.log(results.data[i], 'validddd')\n                                cleanArr.push(results.data[i])\n                            }\n            \n                        } else if (results.data[i]['email']){\n                            let result = await emailCheck(results.data[i]['email'])\n                            if (result.Result === 'Valid') {\n                                console.log(results.data[i], 'validddd')\n                                cleanArr.push(results.data[i])\n                            }\n                        }\n                    }\n                } else {\n                    isUnorganized = true\n                    let unorganized = await Papa.parse(uploaded.file, {\n                        delimiter: '',\n                        newline: '',\n                        header: false,\n                        skipEmptyLines: false,\n                        complete: async function (results) {\n                            const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n                            let emailArr =[]\n                            for(let i = 0; i < results.data.length; i++){\n                                let filtered = results.data[i].filter(str => re.test(str))\n                                emailArr = [...emailArr, ...filtered]\n                            }\n                            console.log(emailArr.length, 'emails found - unorganized')\n                            for(let i = 0; i < emailArr.length; i++){\n                                let result = await emailCheck(emailArr[i])\n                                if (result.Result === 'Valid') {\n                                    cleanArr.push(emailArr[i])\n                                    console.log(cleanArr)\n                                }\n                            }\n                        }\n\n                    \n                    })\n                }\n\n                if (isUnorganized) {\n                    let finalArr = []\n                    console.log(cleanArr )\n                    while (cleanArr.length){\n                        console.log('in loop')\n                        let val = cleanArr.shift()\n                        finalArr.push({'Email': val})\n                    }\n                    console.log(finalArr)\n                    const newF = await Papa.unparse(finalArr)\n\n                    let csvData = new Blob([newF], { type: 'text/csv;charset=utf-8;' })\n                    let csvURL = window.URL.createObjectURL(csvData)\n                    link.download = 'clean-' + uploaded.fName\n                    link.href = csvURL\n                    setLoading(false)\n                    hiddenFileDownload.current.click()\n                    return finalArr\n                }else{\n                    const newF = await Papa.unparse(cleanArr)\n    \n                    let csvData = new Blob([newF], {type: 'text/csv;charset=utf-8;'})\n                    let csvURL = window.URL.createObjectURL(csvData)\n                    link.download = 'clean-'+uploaded.fName\n                    link.href = csvURL\n                    setLoading(false)\n                    hiddenFileDownload.current.click()\n                    return cleanArr\n                }\n\n            }\n        })\n    }\n\n    function handleClick(e){\n        hiddenFileInput.current.click()\n    }\n\n    function handleChange(e){\n        setUploaded({\n            file: e.target.files[0],\n            fName: e.target.files[0].name\n        })\n\n    }\n\n\n    function handleDownload(){\n        let objectURL = URL.createObjectURL(cleanFile?.file)\n\n        link.download = 'clean-'+cleanFile?.fName\n        link.href = objectURL\n\n        hiddenFileDownload.current.click()\n    }\n\n\n    return (\n        <>\n        <input type=\"file\" accept='.csv' onChange={(e)=> handleChange(e)} ref={hiddenFileInput} style={{display:'none'}}/>\n        <a href={uploaded?.file}  id='link' style={{display:'none'}} ref={hiddenFileDownload}></a>\n        <div className='fileUploadWrap'>\n            {loading && (\n                <div className='fileLoader'>\n                    <img src={loadGif} alt=''></img>\n                    <p>Large Files May Take Several Minutes</p>\n                </div>\n            )}\n            {!loading && (\n                <>\n                    <div className=\"dirtyContainer\" onClick={(e)=> handleClick(e)}>\n\n                        <img className='uploadIcon' src={fI}></img>\n                        <p>{uploaded?.fName ? uploaded?.fName : 'Upload Here'}</p>\n                    </div>\n                    <div className='infoBox'>\n                        <p>\n                            Upload a csv file for bulk verification. Include headers on file for best results (i.e. 'Email')\n                        </p>\n                        <p className='cleanButton' onClick={(e)=> handleFilter(e)}>Clean File</p>\n                    </div>\n\n                </>\n            )}\n\n        </div>\n        </>\n    );\n}\n\n\nexport default FileUpload;"],"mappings":"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"},"metadata":{},"sourceType":"module"}